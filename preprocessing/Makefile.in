# Makefile.in generated by automake 1.6.3 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@
SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_HEADER = $(INSTALL_DATA)
transform = @program_transform_name@
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :

EXEEXT = @EXEEXT@
OBJEXT = @OBJEXT@
PATH_SEPARATOR = @PATH_SEPARATOR@
AMTAR = @AMTAR@
AWK = @AWK@
CC = @CC@
CPP = @CPP@
DEPDIR = @DEPDIR@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
PACKAGE = @PACKAGE@
STRIP = @STRIP@
VERSION = @VERSION@
am__include = @am__include@
am__quote = @am__quote@
install_sh = @install_sh@

bin_PROGRAMS = prepare_corpus count_wordvec encode_wordvec \
               count_artvec write_text_params


prepare_corpus_SOURCES = prepare_corpus.c word_tree.c tokenizer.c stopper.c \
		         $(top_srcdir)/lib/utils.c report.c \
			 $(top_srcdir)/lib/model_params.c


count_artvec_SOURCES = count_artvec.c wordlist.c dict.c \
                       word_tree.c $(top_srcdir)/lib/utils.c \
		       vector.c matrix.c \
                       $(top_srcdir)/lib/model_params.c


count_wordvec_SOURCES = count_wordvec.c wordlist.c dict.c word_tree.c \
                        $(top_srcdir)/lib/utils.c vector.c matrix.c \
			$(top_srcdir)/lib/model_params.c


encode_wordvec_SOURCES = encode_wordvec.c dict.c word_tree.c \
                          $(top_srcdir)/lib/utils.c \
                          report.c vector.c $(top_srcdir)/lib/model_params.c


write_text_params_SOURCES = write_text_params.c \
			    $(top_srcdir)/lib/model_params.c


INCLUDES = -I$(top_srcdir) -I$(top_srcdir)/lib -I$(top_srcdir)/admin

EXTRA_DIST = .deps count_artvec.h count_wordvec.h dict.h \
	     encode_wordvec.h matrix.h prepare_corpus.h \
	     preprocessing_env.h preprocessing_types.h \
	     report.h stopper.h tokenizer.h vector.h \
	     word_tree.h wordlist.h

subdir = preprocessing
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
bin_PROGRAMS = prepare_corpus$(EXEEXT) count_wordvec$(EXEEXT) \
	encode_wordvec$(EXEEXT) count_artvec$(EXEEXT) \
	write_text_params$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS)

am_count_artvec_OBJECTS = count_artvec.$(OBJEXT) wordlist.$(OBJEXT) \
	dict.$(OBJEXT) word_tree.$(OBJEXT) utils.$(OBJEXT) \
	vector.$(OBJEXT) matrix.$(OBJEXT) model_params.$(OBJEXT)
count_artvec_OBJECTS = $(am_count_artvec_OBJECTS)
count_artvec_LDADD = $(LDADD)
count_artvec_DEPENDENCIES =
count_artvec_LDFLAGS =
am_count_wordvec_OBJECTS = count_wordvec.$(OBJEXT) wordlist.$(OBJEXT) \
	dict.$(OBJEXT) word_tree.$(OBJEXT) utils.$(OBJEXT) \
	vector.$(OBJEXT) matrix.$(OBJEXT) model_params.$(OBJEXT)
count_wordvec_OBJECTS = $(am_count_wordvec_OBJECTS)
count_wordvec_LDADD = $(LDADD)
count_wordvec_DEPENDENCIES =
count_wordvec_LDFLAGS =
am_encode_wordvec_OBJECTS = encode_wordvec.$(OBJEXT) dict.$(OBJEXT) \
	word_tree.$(OBJEXT) utils.$(OBJEXT) report.$(OBJEXT) \
	vector.$(OBJEXT) model_params.$(OBJEXT)
encode_wordvec_OBJECTS = $(am_encode_wordvec_OBJECTS)
encode_wordvec_LDADD = $(LDADD)
encode_wordvec_DEPENDENCIES =
encode_wordvec_LDFLAGS =
am_prepare_corpus_OBJECTS = prepare_corpus.$(OBJEXT) word_tree.$(OBJEXT) \
	tokenizer.$(OBJEXT) stopper.$(OBJEXT) utils.$(OBJEXT) \
	report.$(OBJEXT) model_params.$(OBJEXT)
prepare_corpus_OBJECTS = $(am_prepare_corpus_OBJECTS)
prepare_corpus_LDADD = $(LDADD)
prepare_corpus_DEPENDENCIES =
prepare_corpus_LDFLAGS =
am_write_text_params_OBJECTS = write_text_params.$(OBJEXT) \
	model_params.$(OBJEXT)
write_text_params_OBJECTS = $(am_write_text_params_OBJECTS)
write_text_params_LDADD = $(LDADD)
write_text_params_DEPENDENCIES =
write_text_params_LDFLAGS =

DEFS = @DEFS@
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/count_artvec.Po \
@AMDEP_TRUE@	./$(DEPDIR)/count_wordvec.Po ./$(DEPDIR)/dict.Po \
@AMDEP_TRUE@	./$(DEPDIR)/encode_wordvec.Po ./$(DEPDIR)/matrix.Po \
@AMDEP_TRUE@	./$(DEPDIR)/model_params.Po \
@AMDEP_TRUE@	./$(DEPDIR)/prepare_corpus.Po ./$(DEPDIR)/report.Po \
@AMDEP_TRUE@	./$(DEPDIR)/stopper.Po ./$(DEPDIR)/tokenizer.Po \
@AMDEP_TRUE@	./$(DEPDIR)/utils.Po ./$(DEPDIR)/vector.Po \
@AMDEP_TRUE@	./$(DEPDIR)/word_tree.Po ./$(DEPDIR)/wordlist.Po \
@AMDEP_TRUE@	./$(DEPDIR)/write_text_params.Po
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
CFLAGS = @CFLAGS@
DIST_SOURCES = $(count_artvec_SOURCES) $(count_wordvec_SOURCES) \
	$(encode_wordvec_SOURCES) $(prepare_corpus_SOURCES) \
	$(write_text_params_SOURCES)
DIST_COMMON = Makefile.am Makefile.in
SOURCES = $(count_artvec_SOURCES) $(count_wordvec_SOURCES) $(encode_wordvec_SOURCES) $(prepare_corpus_SOURCES) $(write_text_params_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  preprocessing/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f $(DESTDIR)$(bindir)/$$f"; \
	  rm -f $(DESTDIR)$(bindir)/$$f; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
utils.$(OBJEXT): $(top_srcdir)/lib/utils.c
model_params.$(OBJEXT): $(top_srcdir)/lib/model_params.c
count_artvec$(EXEEXT): $(count_artvec_OBJECTS) $(count_artvec_DEPENDENCIES) 
	@rm -f count_artvec$(EXEEXT)
	$(LINK) $(count_artvec_LDFLAGS) $(count_artvec_OBJECTS) $(count_artvec_LDADD) $(LIBS)
count_wordvec$(EXEEXT): $(count_wordvec_OBJECTS) $(count_wordvec_DEPENDENCIES) 
	@rm -f count_wordvec$(EXEEXT)
	$(LINK) $(count_wordvec_LDFLAGS) $(count_wordvec_OBJECTS) $(count_wordvec_LDADD) $(LIBS)
encode_wordvec$(EXEEXT): $(encode_wordvec_OBJECTS) $(encode_wordvec_DEPENDENCIES) 
	@rm -f encode_wordvec$(EXEEXT)
	$(LINK) $(encode_wordvec_LDFLAGS) $(encode_wordvec_OBJECTS) $(encode_wordvec_LDADD) $(LIBS)
prepare_corpus$(EXEEXT): $(prepare_corpus_OBJECTS) $(prepare_corpus_DEPENDENCIES) 
	@rm -f prepare_corpus$(EXEEXT)
	$(LINK) $(prepare_corpus_LDFLAGS) $(prepare_corpus_OBJECTS) $(prepare_corpus_LDADD) $(LIBS)
write_text_params$(EXEEXT): $(write_text_params_OBJECTS) $(write_text_params_DEPENDENCIES) 
	@rm -f write_text_params$(EXEEXT)
	$(LINK) $(write_text_params_LDFLAGS) $(write_text_params_OBJECTS) $(write_text_params_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/count_artvec.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/count_wordvec.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dict.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/encode_wordvec.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/matrix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/model_params.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/prepare_corpus.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/report.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stopper.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tokenizer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/utils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vector.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/word_tree.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wordlist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/write_text_params.Po@am__quote@

distclean-depend:
	-rm -rf ./$(DEPDIR)

.c.o:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(COMPILE) -c `cygpath -w $<`

utils.o: $(top_srcdir)/lib/utils.c
@AMDEP_TRUE@	source='$(top_srcdir)/lib/utils.c' object='utils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/utils.Po' tmpdepfile='$(DEPDIR)/utils.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o utils.o `test -f '$(top_srcdir)/lib/utils.c' || echo '$(srcdir)/'`$(top_srcdir)/lib/utils.c

utils.obj: $(top_srcdir)/lib/utils.c
@AMDEP_TRUE@	source='$(top_srcdir)/lib/utils.c' object='utils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/utils.Po' tmpdepfile='$(DEPDIR)/utils.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o utils.obj `cygpath -w $(top_srcdir)/lib/utils.c`

model_params.o: $(top_srcdir)/lib/model_params.c
@AMDEP_TRUE@	source='$(top_srcdir)/lib/model_params.c' object='model_params.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/model_params.Po' tmpdepfile='$(DEPDIR)/model_params.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o model_params.o `test -f '$(top_srcdir)/lib/model_params.c' || echo '$(srcdir)/'`$(top_srcdir)/lib/model_params.c

model_params.obj: $(top_srcdir)/lib/model_params.c
@AMDEP_TRUE@	source='$(top_srcdir)/lib/model_params.c' object='model_params.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/model_params.Po' tmpdepfile='$(DEPDIR)/model_params.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o model_params.obj `cygpath -w $(top_srcdir)/lib/model_params.c`
CCDEPMODE = @CCDEPMODE@
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@list='$(DISTFILES)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(bindir)

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

.PHONY: GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic distclean distclean-compile distclean-depend \
	distclean-generic distclean-tags distdir dvi dvi-am info \
	info-am install install-am install-binPROGRAMS install-data \
	install-data-am install-exec install-exec-am install-info \
	install-info-am install-man install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic tags uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
